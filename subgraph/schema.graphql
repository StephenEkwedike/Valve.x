enum TransferStatus { 
  Init, 
  Sent, 
  Cancelled 
}

enum TokenType {
  ERC20,
  ERC721,
  ERC1155
}

type NewTransfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  tid: BigInt! # uint256
  token: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  expireAt: BigInt! # uint256
  exId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferAccepted @entity(immutable: true) {
  id: Bytes!
  tid: BigInt! # uint256
  exId: Bytes! # bytes32
  tokenType: TokenType!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferCancelled @entity(immutable: true) {
  id: Bytes!
  tid: BigInt! # uint256
  exId: Bytes! # bytes32
  tokenType: TokenType!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Valve721NewTransfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  tid: BigInt! # uint256
  token: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  data: Bytes! # bytes
  expireAt: BigInt! # uint256
  exId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Valve1155NewTransfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  tid: BigInt! # uint256
  token: Bytes! # address
  to: Bytes! # address
  tokenIds: [BigInt!] # uint256[]
  amounts: [BigInt!] # uint256[]
  data: Bytes! # bytes
  expireAt: BigInt! # uint256
  exId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
